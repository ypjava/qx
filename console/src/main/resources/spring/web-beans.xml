<?xml version="1.0" encoding="UTF-8"?><beans xmlns="http://www.springframework.org/schema/beans"	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"	xmlns:mvc="http://www.springframework.org/schema/mvc"	xsi:schemaLocation="	http://www.springframework.org/schema/beans	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd	http://www.springframework.org/schema/context	http://www.springframework.org/schema/context/spring-context-4.0.xsd	http://www.springframework.org/schema/mvc	http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">	<context:component-scan base-package="xyz.yp.module.qx.console">		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />	</context:component-scan>	<bean id="freeMarkerConfigurer" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">		<property name="templateLoaderPath" value="WEB-INF/views/" />		<!--FreeMarker默认每隔5秒检查模板是否被更新，如果已经更新了，就会重新加载并分析模板。 但经常检查模板是否更新可能比较耗时。如果你的应用运行在生产模式下，而且你预期模板不会经常更新，			则可以将更新的延迟时间延长至一个小时或者更久。 可以通过为freemarkerSettings属性设置template_update_delay达到这一目的-->		<property name="freemarkerSettings">			<props>				<prop key="default_encoding">UTF-8</prop>				<prop key="output_encoding">UTF-8</prop>			</props>		</property>		<!--以下语句可以也可以配置freemarker Settings属性，代码更为简洁-->		<property name="configLocation" value="classpath:/freeMarker.properties"></property>	</bean> 	<!-- 配置freeMarker视图解析器 -->	<!-- FreeMarker视图解析 如返回student,在这里配置后缀名ftl和视图解析器 -->	 <bean id="freemarkerResolver"		class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">		<property name="viewClass"			value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" />		<property name="cache" value="true" />		<property name="suffix" value=".ftl" />		<property name="contentType" value="text/html;charset=UTF-8" />		<property name="requestContextAttribute" value="request" />		<!-- 将请求和会话属性作为变量暴露给FreeMarker模板使用。要做到这一点，可以设置exposeRequestAttributes或者exposeSessionAttributes为true -->		<property name="exposeRequestAttributes" value="true" />		<property name="exposeSessionAttributes" value="true" />		<!-- 使用这些宏，必须设置FreeMarkerViewResolver的exposeMacroHelpers属性为true -->		<property name="exposeSpringMacroHelpers" value="true" />	</bean>  	<!-- 缺省的url-bean映射方式 -->	<bean id="defaultHandlerMapping"		class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping">		<property name="order" value="0" />	</bean>	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">		<!-- 默认编码 -->		<property name="defaultEncoding" value="utf-8" />		<!-- 文件大小最大值 -->		<property name="maxUploadSize" value="10485760000" />		<!-- 内存中的最大值，默认为10K		<property name="maxInMemorySize" value="40960" /> -->	</bean>	<!-- 默认的注释处理程序映射 -->	<bean		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">		<property name="order" value="200" />	</bean>			<mvc:annotation-driven /></beans>